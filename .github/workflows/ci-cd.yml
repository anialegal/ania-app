name: build-and-deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install backend dependencies
        working-directory: backend
        run: |
          poetry config virtualenvs.create false
          poetry install --only main --no-interaction

      - name: Run backend tests
        working-directory: backend
        run: |
          export PYTHONPATH="$PWD:$PWD/modules:$PYTHONPATH"
          poetry run pytest

      - name: Login to Amazon ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region $AWS_REGION \
          | docker login --username AWS --password-stdin ${{ secrets.ID_AWS }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build & Push Backend Image
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          docker build -t ania-backend:latest backend
          docker tag ania-backend:latest ${{ secrets.ID_AWS }}.dkr.ecr.$AWS_REGION.amazonaws.com/ania-backend:latest
          docker push ${{ secrets.ID_AWS }}.dkr.ecr.$AWS_REGION.amazonaws.com/ania-backend:latest

      - name: Build & Push Legal Frontend Image
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          docker build -t ania-legal-frontend:latest frontend/legal
          docker tag ania-legal-frontend:latest ${{ secrets.ID_AWS }}.dkr.ecr.$AWS_REGION.amazonaws.com/ania-legal-frontend:latest
          docker push ${{ secrets.ID_AWS }}.dkr.ecr.$AWS_REGION.amazonaws.com/ania-legal-frontend:latest

